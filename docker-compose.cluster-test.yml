# Redis Cluster Docker Compose for Integration Testing
# This configuration creates a 6-node Redis cluster (3 masters + 3 replicas)
# for comprehensive integration testing of the Redis FDW

version: '3.8'

# Define common Redis service template
x-redis-common: &redis-common
  image: redis:${REDIS_VERSION:-7-alpine}
  restart: unless-stopped
  sysctls:
    - net.core.somaxconn=65535
  volumes:
    - ./test-logs:/var/log/redis
  networks:
    - redis-cluster-test
  healthcheck:
    test: ["CMD", "redis-cli", "-p", "PORT_PLACEHOLDER", "ping"]
    interval: 5s
    timeout: 3s
    retries: 5
    start_period: 10s

services:
  # Redis cluster nodes
  redis-cluster-1:
    <<: *redis-common
    container_name: redis-cluster-test-1
    hostname: redis-cluster-1
    ports:
      - "7001:7001"
    command: >
      redis-server
      --port 7001
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --bind 0.0.0.0
      --protected-mode no
      --logfile /var/log/redis/redis-1.log
      --loglevel notice
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7001", "ping"]
    networks:
      redis-cluster-test:
        ipv4_address: 10.1.0.11

  redis-cluster-2:
    <<: *redis-common
    container_name: redis-cluster-test-2
    hostname: redis-cluster-2
    ports:
      - "7002:7002"
    command: >
      redis-server
      --port 7002
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --bind 0.0.0.0
      --protected-mode no
      --logfile /var/log/redis/redis-2.log
      --loglevel notice
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7002", "ping"]
    networks:
      redis-cluster-test:
        ipv4_address: 10.1.0.12

  redis-cluster-3:
    <<: *redis-common
    container_name: redis-cluster-test-3
    hostname: redis-cluster-3
    ports:
      - "7003:7003"
    command: >
      redis-server
      --port 7003
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --bind 0.0.0.0
      --protected-mode no
      --logfile /var/log/redis/redis-3.log
      --loglevel notice
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7003", "ping"]
    networks:
      redis-cluster-test:
        ipv4_address: 10.1.0.13

  redis-cluster-4:
    <<: *redis-common
    container_name: redis-cluster-test-4
    hostname: redis-cluster-4
    ports:
      - "7004:7004"
    command: >
      redis-server
      --port 7004
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --bind 0.0.0.0
      --protected-mode no
      --logfile /var/log/redis/redis-4.log
      --loglevel notice
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7004", "ping"]
    networks:
      redis-cluster-test:
        ipv4_address: 10.1.0.14

  redis-cluster-5:
    <<: *redis-common
    container_name: redis-cluster-test-5
    hostname: redis-cluster-5
    ports:
      - "7005:7005"
    command: >
      redis-server
      --port 7005
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --bind 0.0.0.0
      --protected-mode no
      --logfile /var/log/redis/redis-5.log
      --loglevel notice
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7005", "ping"]
    networks:
      redis-cluster-test:
        ipv4_address: 10.1.0.15

  redis-cluster-6:
    <<: *redis-common
    container_name: redis-cluster-test-6
    hostname: redis-cluster-6
    ports:
      - "7006:7006"
    command: >
      redis-server
      --port 7006
      --cluster-enabled yes
      --cluster-config-file nodes.conf
      --cluster-node-timeout 5000
      --appendonly yes
      --bind 0.0.0.0
      --protected-mode no
      --logfile /var/log/redis/redis-6.log
      --loglevel notice
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7006", "ping"]
    networks:
      redis-cluster-test:
        ipv4_address: 10.1.0.16

  # Cluster initialization service
  redis-cluster-init:
    image: redis:${REDIS_VERSION:-7-alpine}
    container_name: redis-cluster-test-init
    networks:
      - redis-cluster-test
    depends_on:
      redis-cluster-1:
        condition: service_healthy
      redis-cluster-2:
        condition: service_healthy
      redis-cluster-3:
        condition: service_healthy
      redis-cluster-4:
        condition: service_healthy
      redis-cluster-5:
        condition: service_healthy
      redis-cluster-6:
        condition: service_healthy
    environment:
      - CLUSTER_NODES=${CLUSTER_NODES:-10.1.0.11:7001 10.1.0.12:7002 10.1.0.13:7003 10.1.0.14:7004 10.1.0.15:7005 10.1.0.16:7006}
      - REPLICAS_PER_MASTER=${REPLICAS_PER_MASTER:-1}
    volumes:
      - ./scripts/cluster:/scripts:ro
    command: /scripts/init-cluster.sh
    restart: "no"

networks:
  redis-cluster-test:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.0.0/16

volumes:
  test-logs:
